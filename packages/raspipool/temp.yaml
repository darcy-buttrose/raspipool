sensor:
# Atlas Resistance Temperature Detector (RTD)
  - platform: atlas_scientific
# For serial ports use:
#   port: /dev/ttyUSB0
# For I2C enter the hex device id
    port: 0x66
    scan_interval: 30
    scale: 'F'

  - platform: statistics
    name: pool_temp_stat
    entity_id: sensor.ezo_temperature

  - platform: template
    sensors:
      pool_temp:
        unit_of_measurement: 'C'
        value_template: >
          {% if is_state('sensor.pool_temp_stat', 'unknown') %}
            0
          {% else %}
            {{ states('sensor.pool_temp_stat') }}
          {% endif %}


input_number:
  calibrate_temp:
    min: 40
    max: 90
    step: 1
    unit_of_measurement: 'F'
    icon: mdi:coolant-temperature
    mode: box
    initial: 70

automation:
#TODO - fix this!!!!
  - alias: temp_low
    trigger:
    - platform: numeric_state
      entity_id: sensor.pool_temp_stat
      below: 7
      for:
        hours: 24
    action:
    - data_template:
        message: '{{trigger.to_state.attributes.friendly_name}} has been less than {{trigger.below}} 째C
          for more than {{trigger.for}}'
        title: 'Temperature Low - {{trigger.to_state.state}} 째C!'
      service: notify.notify

  - alias: temp_high
    trigger:
    - platform: numeric_state
      entity_id: sensor.pool_temp_stat
      above: 29
      for:
        hours: 24
    action:
    - data_template:
        message: '{{trigger.to_state.attributes.friendly_name}} has been more than {{trigger.above}} 째C
          for more than {{trigger.for}}'
        title: 'Temperature High - {{trigger.to_state.state}} 째C!'
      service: notify.notify
